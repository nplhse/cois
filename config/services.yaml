# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.locale: "%env(resolve:APP_LOCALE)%"
    app.supported_locales: "en|de"
    app.mailer.sender: "noreply@cois.dev"
    app.mailer.from: "Collaborative IVENA statistics"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $mailerSender: "%app.mailer.sender%"
            $mailerFrom: "%app.mailer.from%"
            $projectDir: '%kernel.project_dir%'

    _instanceof:
        App\Application\Contract\HandlerInterface:
            public: true
            tags: ["messenger.message_handler"]

        App\Application\Contract\FilterInterface:
            tags: ["app.filters"]

        App\Application\Contract\ImportWriterInterface:
            tags: [ "app.import_writer" ]

        App\Application\Contract\ImportReaderInterface:
            tags: [ "app.import_reader" ]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/"
        exclude:
            - "../src/DependencyInjection/"
            - "../src/Entity/"
            - "../src/Kernel.php"
            - "../src/Tests/"

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: "../src/Controller/"
        tags: ["controller.service_arguments"]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider: ~

    App\Service\FilterService:
        class: 'App\Service\FilterService'
        arguments:
            - !tagged_iterator { tag: "app.filters", default_index_method: "getParam" }

    App\Service\ImportService:
        class: 'App\Service\ImportService'
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@debug.stopwatch'
            - '@validator'
            - !tagged_iterator { tag: "app.import_reader", default_index_method: "getFileType" }
            - !tagged_iterator { tag: "app.import_writer", default_priority_method: "getPriority" }
