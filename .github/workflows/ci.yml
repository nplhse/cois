name: Continuous integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  static:
    name: Static analyzers / checks (PHP ${{ matrix.php-versions }})

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '7.4' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@2.5.0
        with:
          php-version: ${{ matrix.php-versions }}
          tools: php-cs-fixer, phpstan, symfony

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Set Node version to 15
        uses: actions/setup-node@v1
        with:
          node-version: 15

      - name: Run yarn install
        run: yarn install

      - name: Check which versions we're using
        run: |
          mysql --version
          php --version
          composer --version
          node --version
          yarn --version
          php ./bin/console --version
          php ./vendor/bin/simple-phpunit --version

      - name: Check that environment is configured correctly
        run: php ./vendor/bin/requirements-checker

      - name: Run PHP CodeSniffer
        run: php ./vendor/bin/php-cs-fixer fix

      - name: Run PHPStan static analysis tool
        run: php ./vendor/bin/phpstan analyse

  tests:
    name: PHPUnit tests (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    needs:
      - static

    strategy:
      matrix:
        php-versions: [ '7.4' ]

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: symfony
          MYSQL_DATABASE: symfony
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.5.0
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit, symfony
          coverage: pcov

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Set Node version to 15
        uses: actions/setup-node@v1
        with:
          node-version: 15

      - name: Run all Setup scripts
        run: composer setup
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - name: Run Testsuite
        run: composer run-tests
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - name: Report test coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./build/coverage/logs/
