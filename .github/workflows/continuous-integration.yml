name: Continuous Integration

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    static-analysis:
        runs-on: ubuntu-latest
        steps:
            - uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.0"
            - uses: actions/checkout@v2

            - name: Copy .env.test.local
              run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

            - name: Validate main `composer.json` and `composer.lock` files
              run: composer validate --no-check-version

            - name: Cache Composer packages
              id: composer-cache
              uses: actions/cache@v2
              with:
                  path: vendor
                  key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-php-
            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

            - name: Analyse PHP Code (EasyCodingStandard)
              run: vendor/bin/ecs

            - name: Analyse PHP Code (PHPStan)
              run: |
                  php bin/console cache:warmup
                  vendor/bin/phpstan analyse

            - name: Analyse PHP Code (Psalm)
              run: vendor/bin/psalm

            - name: Cache node_modules
              uses: actions/cache@v1
              id: yarn-cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-yarn-cache-node-modules-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-cache-node-modules-
            - name: Yarn install
              if: steps.yarn-cache-node-modules.outputs.cache-hit != 'true'
              run: yarn install

            - name: Analyse JS (ESLint)
              run: yarn run eslint assets

            - name: Analyse JS Style (Pettier)
              run: yarn run prettier --check .

    tests:
        runs-on: ubuntu-latest
        steps:
            - uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.0"
            - uses: actions/checkout@v2

            - name: Copy .env.test.local
              run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

            - name: Cache Composer packages
              id: composer-cache
              uses: actions/cache@v2
              with:
                  path: vendor
                  key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-php-
            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

            - name: Cache node_modules
              uses: actions/cache@v1
              id: yarn-cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-yarn-cache-node-modules-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-cache-node-modules-
            - name: Yarn install
              if: steps.yarn-cache-node-modules.outputs.cache-hit != 'true'
              run: yarn install

            - name: Yarn build
              run: yarn run encore production

            - name: Execute tests via PHPUnit
              run: vendor/bin/phpunit
